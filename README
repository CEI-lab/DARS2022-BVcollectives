# Braitenberg Vehicle Simulator

See DARS 2022 paper for details of implementation.

To run a demo:

1. `python generate_demo.py`
2. `python play_demo.py` (will produce a pygame preview window, and save an
mp4, you can turn off mp4 logging at the top of the file)

To run a static demo:
1. `python demo_interactive.py`
2. Use the up and down arrow keys to increase or decrease the leader (red circle)
speed. Use the left and right arrow keys to turn the leader left and right. Use
the number 1 key to switch global taxis mode, and 2 to switch global kinesis mode.

To recreate figures from the paper:

- The first three sections of `multiple_sweeps.py` create the heat maps for the
three sensor/stimulus models. Uncomment as desired.
- Run `light_field_figure.py` to recreate the paper figure 1, or any
representative light field for troubleshooting different sensor models.
- `noise_figs.py` will create the noise analysis figures from the paper.
- `trails_figure.py`

Other files:

- `robots.py`: defines the Robots class, sensor and stimulus models, etc.
- `param_sweep.py`: lower-level functions to assist in parameter sweeps.
- `unit_test.py`: runs tests on the codebase. TODO: clean up and integrate with
unittest library.
- `utils.py`: other geometric and file handling utility functions.

